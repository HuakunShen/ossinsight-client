/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/collections/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List collections
         * @description List collections.
         */
        get: operations["list-collections"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/hot/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List hot collections
         * @description List hot collections with top repositories of the collection.
         */
        get: operations["list-hot-collections"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/trends/repos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List trending repos
         * @description Trending repos is an open source alternative to GitHub trends, which showcases recently popular open source projects in the GitHub community.
         *
         *     > **Note**
         *     >
         *     > Please URI encode the requested parameters, e.g. `C++` needs to be encoded as `C%2B%2B`.
         *
         *     ☁️ Daily run on [TiDB Cloud](https://tidbcloud.com/?utm_source=ossinsight&utm_medium=ossinsight_api), analyze upon dataset that has over 6 billion GitHub events.
         */
        get: operations["list-trending-repos"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/ranking_by_issues/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Repository ranking by issues
         * @description Rank the GitHub repositories in the specified collection according to the number of issues.
         */
        get: operations["collection-repo-ranking-by-issues"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/ranking_by_prs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Repository ranking by prs
         * @description Rank the GitHub repositories in the specified collection according to the number of pull requests.
         */
        get: operations["collection-repo-ranking-by-prs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/ranking_by_stars/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Repository ranking by stars
         * @description Rank the GitHub repositories in the specified collection according to the number of stars.
         */
        get: operations["collection-repo-ranking-by-stars"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/collections/{collection_id}/repos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List collection repositories
         * @description List the repositories of collection.
         */
        get: operations["list-repos-of-collection"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/issue_creators/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List issue creators
         * @description Querying the issue creators for a given repository.
         */
        get: operations["list-issue-creators"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/pull_request_creators/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List pull request creators
         * @description Querying the pull request creators list in a given repository.
         *
         *     This API provides multiple ways to sort the query results, for example:
         *
         *     - `sort=prs-desc` (Default): Sorted in descending order based on `prs` field (the number of PRs they have contributed), meaning that the contributor with the most PRs is at the top.
         *     - `sort=first_pr_merged_at-desc`: Sorted in descending order based on `first_pr_merged_at` field (the time of their first merged PR), which means you can got a list of new code contributors of the repository.
         *
         */
        get: operations["list-pull-request-creators"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/issue_creators/countries/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List countries/regions of issue creators
         * @description List countries/regions of stargazers for the specified repository.
         *
         *     > **Notice**:
         *     > In the overall data, about **3.5%** of GitHub users provided valid country/region information.
         *
         *     > **Note**:
         *     > By default, the API does not count users without valid country/region information.
         *     > If you need to count these users, you can set the `exclude_unknown` parameter to `false`.
         *
         */
        get: operations["list-countries-of-issue-creators"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/issue_creators/history/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Issue creators history
         * @description Querying the historical trend of the number of issue creators in a given repository.
         */
        get: operations["issue-creators-history"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/issue_creators/organizations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List organizations of stargazers
         * @description List organizations of stargazers for the specified repository.
         *
         *     > **Notice**:
         *     > In the overall data, about **5.62%** of GitHub users provided valid organization information.
         *
         *     > **Note**:
         *     > By default, the API does not count users without valid organization information.
         *     > If you need to count these users, you can set the `exclude_unknown` parameter to `false`.
         *
         */
        get: operations["list-organizations-of-issue-creators"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/stargazers/countries/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List countries/regions of stargazers
         * @description List countries/regions of stargazers for the specified repository.
         *
         *     > **Notice**:
         *     > In the overall data, about **3.5%** of GitHub users provided valid country/region information.
         *
         *     > **Note**:
         *     > By default, the API does not count users without valid country/region information.
         *     > If you need to count these users, you can set the `exclude_unknown` parameter to `false`.
         *
         */
        get: operations["list-countries-of-stargazers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/stargazers/history/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Stargazers history
         * @description Querying the historical trend of the number of stargazers in a given repository.
         */
        get: operations["stargazers-history"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/stargazers/organizations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List organizations of stargazers
         * @description List organizations of stargazers for the specified repository.
         *
         *     > **Notice**:
         *     > In the overall data, about **5.62%** of GitHub users provided valid organization information.
         *
         *     > **Note**:
         *     > By default, the API does not count users without valid organization information.
         *     > If you need to count these users, you can set the `exclude_unknown` parameter to `false`.
         *
         */
        get: operations["list-organizations-of-stargazers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/pull_request_creators/countries/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List countries/regions of PR creators
         * @description List countries/regions of pull request creators for the specified repository.
         *
         *     > **Notice**:
         *     > In the overall data, about **3.5%** of GitHub users provided valid country/region information.
         *
         *     > **Note**:
         *     > By default, the API does not count users without valid country/region information.
         *     > If you need to count these users, you can set the `exclude_unknown` parameter to `false`.
         *
         */
        get: operations["list-countries-of-pr-creators"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/pull_request_creators/history/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Pull request creators history
         * @description Querying the historical trend of the number of pull request creators in a given repository.
         */
        get: operations["pull-request-creators-history"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/repos/{owner}/{repo}/pull_request_creators/organizations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List organizations of PR creators
         * @description List organizations of pull request creators for the specified repository.
         *
         *     > **Notice**:
         *     > In the overall data, about **5.62%** of GitHub users has valid organization information.
         *
         *     > **Note**:
         *     > By default, the API does not count users without valid organization information.
         *     > If you need to count these users, you can set the `exclude_unknown` parameter to `false`.
         *
         */
        get: operations["list-organizations-of-pr-creators"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "list-collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "id",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "id": "1",
                             *         "name": "Static Site Generator"
                             *       },
                             *       {
                             *         "id": "2",
                             *         "name": "Open Source Database"
                             *       },
                             *       {
                             *         "id": "10001",
                             *         "name": "CSS Framework"
                             *       },
                             *       {
                             *         "id": "10002",
                             *         "name": "Google Analytics Alternative"
                             *       },
                             *       {
                             *         "id": "10003",
                             *         "name": "Low Code Development Tool"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description Repository ID */
                                repo_id?: string;
                                /** @description Repository name */
                                repo_name?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 5,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-hot-collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "id",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repos",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repo_id",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repo_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repo_current_period_rank",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "repo_past_period_rank",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "repo_rank_changes",
                             *         "data_type": "BIGINT",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "id": "10010",
                             *         "name": "Artificial Intelligence",
                             *         "repos": "36",
                             *         "repo_id": "155220641",
                             *         "repo_name": "huggingface/transformers",
                             *         "repo_current_period_rank": "1",
                             *         "repo_past_period_rank": "1",
                             *         "repo_rank_changes": "0"
                             *       },
                             *       {
                             *         "id": "10010",
                             *         "name": "Artificial Intelligence",
                             *         "repos": "36",
                             *         "repo_id": "65600975",
                             *         "repo_name": "pytorch/pytorch",
                             *         "repo_current_period_rank": "3",
                             *         "repo_past_period_rank": "4",
                             *         "repo_rank_changes": "1"
                             *       },
                             *       {
                             *         "id": "10010",
                             *         "name": "Artificial Intelligence",
                             *         "repos": "36",
                             *         "repo_id": "458588993",
                             *         "repo_name": "nebuly-ai/nebullvm",
                             *         "repo_current_period_rank": "2",
                             *         "repo_past_period_rank": "2",
                             *         "repo_rank_changes": "0"
                             *       },
                             *       {
                             *         "id": "10078",
                             *         "name": "ChatGPT Apps",
                             *         "repos": "36",
                             *         "repo_id": "599394820",
                             *         "repo_name": "Chanzhaoyu/chatgpt-web",
                             *         "repo_current_period_rank": "3",
                             *         "repo_past_period_rank": "6",
                             *         "repo_rank_changes": "3"
                             *       },
                             *       {
                             *         "id": "10078",
                             *         "name": "ChatGPT Apps",
                             *         "repos": "36",
                             *         "repo_id": "609416865",
                             *         "repo_name": "yetone/openai-translator",
                             *         "repo_current_period_rank": "2",
                             *         "repo_past_period_rank": "",
                             *         "repo_rank_changes": ""
                             *       },
                             *       {
                             *         "id": "10078",
                             *         "name": "ChatGPT Apps",
                             *         "repos": "36",
                             *         "repo_id": "608555244",
                             *         "repo_name": "microsoft/visual-chatgpt",
                             *         "repo_current_period_rank": "1",
                             *         "repo_past_period_rank": "",
                             *         "repo_rank_changes": ""
                             *       }
                             *     ] */
                            rows: ({
                                /** @description Collection ID */
                                id?: string;
                                /** @description Collection name */
                                name?: string;
                                /** @description The number of repositories in the collection */
                                repos?: string;
                                /** @description Repository ID */
                                repo_id?: string;
                                /** @description Repository name */
                                repo_name?: string;
                                /** @description The rank of the repository in the collection in the current period */
                                repo_current_period_rank?: string;
                                /** @description The rank of the repository in the collection in the past period */
                                repo_past_period_rank?: string;
                                /** @description The rank changes of the repository in the collection */
                                repo_rank_changes?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 6,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-trending-repos": {
        parameters: {
            query?: {
                /** @description Specify the period of time to calculate trending repos. */
                period?: "past_24_hours" | "past_week" | "past_month" | "past_3_months";
                /** @description Specify using which programming language to filter trending repos. If not specified, all languages will be included. */
                language?: "All" | "JavaScript" | "Java" | "Python" | "PHP" | "C++" | "C#" | "TypeScript" | "Shell" | "C" | "Ruby" | "Rust" | "Go" | "Kotlin" | "HCL" | "PowerShell" | "CMake" | "Groovy" | "PLpgSQL" | "TSQL" | "Dart" | "Swift" | "HTML" | "CSS" | "Elixir" | "Haskell" | "Solidity" | "Assembly" | "R" | "Scala" | "Julia" | "Lua" | "Clojure" | "Erlang" | "Common Lisp" | "Emacs Lisp" | "OCaml" | "MATLAB" | "Objective-C" | "Perl" | "Fortran";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "repo_id",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "repo_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "primary_language",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "description",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "stars",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "forks",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "pull_requests",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "pushes",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "total_score",
                             *         "data_type": "DOUBLE",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "contributor_logins",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "collection_names",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "collection_names": "CICD",
                             *         "contributor_logins": "cplee,nektos-ci,usagirei,ae-ou,MrNossiom",
                             *         "description": "Run your GitHub Actions locally 🚀",
                             *         "forks": "5",
                             *         "primary_language": "Go",
                             *         "pull_requests": "6",
                             *         "pushes": "17",
                             *         "repo_id": "163883279",
                             *         "repo_name": "nektos/act",
                             *         "stars": "395",
                             *         "total_score": "1565.7526"
                             *       },
                             *       {
                             *         "collection_names": "ChatGPT Alternatives",
                             *         "contributor_logins": "antonkesy,ruanslv,starplatinum3,AlexandroLuis,realhaik",
                             *         "description": "Inference code for LLaMA models",
                             *         "forks": "48",
                             *         "primary_language": "Python",
                             *         "pull_requests": "41",
                             *         "pushes": "7",
                             *         "repo_id": "601538369",
                             *         "repo_name": "facebookresearch/llama",
                             *         "stars": "209",
                             *         "total_score": "1079.0274"
                             *       },
                             *       {
                             *         "collection_names": "Stable Diffusion Ecosystem",
                             *         "contributor_logins": "atiorh,SaladDays831,ZachNagengast,TimYao18,vzsg",
                             *         "description": "Stable Diffusion with Core ML on Apple Silicon",
                             *         "forks": "5",
                             *         "primary_language": "Python",
                             *         "pull_requests": "7",
                             *         "pushes": "5",
                             *         "repo_id": "566576114",
                             *         "repo_name": "apple/ml-stable-diffusion",
                             *         "stars": "99",
                             *         "total_score": "575.2498"
                             *       },
                             *       {
                             *         "collection_names": "Stable Diffusion Ecosystem",
                             *         "contributor_logins": "danonymous856,EvilPhi666,FurkanGozukara,Prathyusha-98,ca-kishida",
                             *         "description": "High-Resolution Image Synthesis with Latent Diffusion Models",
                             *         "forks": "6",
                             *         "primary_language": "Python",
                             *         "pull_requests": "2",
                             *         "pushes": "",
                             *         "repo_id": "569927055",
                             *         "repo_name": "Stability-AI/stablediffusion",
                             *         "stars": "75",
                             *         "total_score": "483.0236"
                             *       }
                             *     ] */
                            rows: {
                                /** @description ID of the repo */
                                repo_id?: string;
                                /** @description Name of the repo */
                                repo_name?: string;
                                /** @description Primary programing language used by the repo */
                                primary_language?: string;
                                /** @description Description of the repo */
                                description?: string;
                                /** @description Number of stars in the period */
                                stars?: string;
                                /** @description Number of forks in the period */
                                forks?: string;
                                /** @description Number of pull requests in the period */
                                pull_requests?: string;
                                /** @description Number of pushes in the period */
                                pushes?: string;
                                /** @description Total score of the repo */
                                total_score?: string;
                                /** @description Comma separated list of active contributor logins */
                                contributor_logins?: string;
                                /** @description Comma separated list of collection names */
                                collection_names?: string;
                            }[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 4,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "collection-repo-ranking-by-issues": {
        parameters: {
            query?: {
                /** @description The period of the range. */
                period?: "past_28_days" | "past_month";
            };
            header?: never;
            path: {
                /** @description The ID of collection */
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "repo_id",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repo_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "current_period_growth",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "current_period_rank",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "past_period_growth",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "past_period_rank",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "growth_pop",
                             *         "data_type": "DECIMAL",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "rank_pop",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "total",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "repo_id": "16563587",
                             *         "repo_name": "cockroachdb/cockroach",
                             *         "current_period_growth": "677",
                             *         "past_period_growth": "729",
                             *         "growth_pop": "-7.13",
                             *         "rank_pop": "0",
                             *         "total": "54541",
                             *         "current_period_rank": "1",
                             *         "past_period_rank": "1"
                             *       },
                             *       {
                             *         "repo_id": "60246359",
                             *         "repo_name": "clickhouse/clickhouse",
                             *         "current_period_growth": "268",
                             *         "past_period_growth": "296",
                             *         "growth_pop": "-9.46",
                             *         "rank_pop": "-1",
                             *         "total": "16732",
                             *         "current_period_rank": "2",
                             *         "past_period_rank": "3"
                             *       },
                             *       {
                             *         "repo_id": "41986369",
                             *         "repo_name": "pingcap/tidb",
                             *         "current_period_growth": "263",
                             *         "past_period_growth": "214",
                             *         "growth_pop": "22.90",
                             *         "rank_pop": "-3",
                             *         "total": "15622",
                             *         "current_period_rank": "3",
                             *         "past_period_rank": "6"
                             *       },
                             *       {
                             *         "repo_id": "105944401",
                             *         "repo_name": "yugabyte/yugabyte-db",
                             *         "current_period_growth": "246",
                             *         "past_period_growth": "298",
                             *         "growth_pop": "-17.45",
                             *         "rank_pop": "2",
                             *         "total": "15079",
                             *         "current_period_rank": "4",
                             *         "past_period_rank": "2"
                             *       },
                             *       {
                             *         "repo_id": "208728772",
                             *         "repo_name": "milvus-io/milvus",
                             *         "current_period_growth": "234",
                             *         "past_period_growth": "237",
                             *         "growth_pop": "-1.27",
                             *         "rank_pop": "0",
                             *         "total": "8675",
                             *         "current_period_rank": "5",
                             *         "past_period_rank": "5"
                             *       },
                             *       {
                             *         "repo_id": "507775",
                             *         "repo_name": "elastic/elasticsearch",
                             *         "current_period_growth": "214",
                             *         "past_period_growth": "144",
                             *         "growth_pop": "48.61",
                             *         "rank_pop": "-3",
                             *         "total": "31578",
                             *         "current_period_rank": "6",
                             *         "past_period_rank": "9"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description The repository ID */
                                repo_id?: string;
                                /** @description The repository name */
                                repo_name?: string;
                                /** @description issues growth in the current period (past 28 days / current month) */
                                current_period_growth?: string;
                                /** @description issues growth in the past period (The 28 days before the past 28 days / past month) */
                                past_period_growth?: string;
                                /** @description The period-over-period growth of issues */
                                growth_pop?: string;
                                /** @description The period-over-period rank changes of issues */
                                rank_pop?: string;
                                /** @description The current total issues of repository */
                                total?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 7,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "collection-repo-ranking-by-prs": {
        parameters: {
            query?: {
                /** @description The period of the range. */
                period?: "past_28_days" | "past_month";
            };
            header?: never;
            path: {
                /** @description The ID of collection */
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "repo_id",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repo_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "current_period_growth",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "current_period_rank",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "past_period_growth",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "past_period_rank",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "growth_pop",
                             *         "data_type": "DECIMAL",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "rank_pop",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "total",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "repo_id": "16563587",
                             *         "repo_name": "cockroachdb/cockroach",
                             *         "current_period_growth": "677",
                             *         "past_period_growth": "729",
                             *         "growth_pop": "-7.13",
                             *         "rank_pop": "0",
                             *         "total": "54541",
                             *         "current_period_rank": "1",
                             *         "past_period_rank": "1"
                             *       },
                             *       {
                             *         "repo_id": "60246359",
                             *         "repo_name": "clickhouse/clickhouse",
                             *         "current_period_growth": "268",
                             *         "past_period_growth": "296",
                             *         "growth_pop": "-9.46",
                             *         "rank_pop": "-1",
                             *         "total": "16732",
                             *         "current_period_rank": "2",
                             *         "past_period_rank": "3"
                             *       },
                             *       {
                             *         "repo_id": "41986369",
                             *         "repo_name": "pingcap/tidb",
                             *         "current_period_growth": "263",
                             *         "past_period_growth": "214",
                             *         "growth_pop": "22.90",
                             *         "rank_pop": "-3",
                             *         "total": "15622",
                             *         "current_period_rank": "3",
                             *         "past_period_rank": "6"
                             *       },
                             *       {
                             *         "repo_id": "105944401",
                             *         "repo_name": "yugabyte/yugabyte-db",
                             *         "current_period_growth": "246",
                             *         "past_period_growth": "298",
                             *         "growth_pop": "-17.45",
                             *         "rank_pop": "2",
                             *         "total": "15079",
                             *         "current_period_rank": "4",
                             *         "past_period_rank": "2"
                             *       },
                             *       {
                             *         "repo_id": "208728772",
                             *         "repo_name": "milvus-io/milvus",
                             *         "current_period_growth": "234",
                             *         "past_period_growth": "237",
                             *         "growth_pop": "-1.27",
                             *         "rank_pop": "0",
                             *         "total": "8675",
                             *         "current_period_rank": "5",
                             *         "past_period_rank": "5"
                             *       },
                             *       {
                             *         "repo_id": "507775",
                             *         "repo_name": "elastic/elasticsearch",
                             *         "current_period_growth": "214",
                             *         "past_period_growth": "144",
                             *         "growth_pop": "48.61",
                             *         "rank_pop": "-3",
                             *         "total": "31578",
                             *         "current_period_rank": "6",
                             *         "past_period_rank": "9"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description The repository ID */
                                repo_id?: string;
                                /** @description The repository name */
                                repo_name?: string;
                                /** @description prs growth in the current period (past 28 days / current month) */
                                current_period_growth?: string;
                                /** @description prs growth in the past period (The 28 days before the past 28 days / past month) */
                                past_period_growth?: string;
                                /** @description The period-over-period growth of prs */
                                growth_pop?: string;
                                /** @description The period-over-period rank changes of prs */
                                rank_pop?: string;
                                /** @description The current total prs of repository */
                                total?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 7,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "collection-repo-ranking-by-stars": {
        parameters: {
            query?: {
                /** @description The period of the range. */
                period?: "past_28_days" | "past_month";
            };
            header?: never;
            path: {
                /** @description The ID of collection */
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "repo_id",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repo_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "current_period_growth",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "current_period_rank",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "past_period_growth",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "past_period_rank",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "growth_pop",
                             *         "data_type": "DECIMAL",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "rank_pop",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "total",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "repo_id": "208728772",
                             *         "repo_name": "milvus-io/milvus",
                             *         "current_period_growth": "612",
                             *         "current_period_rank": "1",
                             *         "growth_pop": "-20.31",
                             *         "past_period_growth": "768",
                             *         "past_period_rank": "1",
                             *         "rank_pop": "0",
                             *         "total": "23803"
                             *       },
                             *       {
                             *         "repo_id": "60246359",
                             *         "repo_name": "clickhouse/clickhouse",
                             *         "current_period_growth": "418",
                             *         "current_period_rank": "2",
                             *         "growth_pop": "-9.72",
                             *         "past_period_growth": "463",
                             *         "past_period_rank": "2",
                             *         "rank_pop": "0",
                             *         "total": "30935"
                             *       },
                             *       {
                             *         "repo_id": "507775",
                             *         "repo_name": "elastic/elasticsearch",
                             *         "current_period_growth": "377",
                             *         "current_period_rank": "3",
                             *         "growth_pop": "2.45",
                             *         "past_period_growth": "368",
                             *         "past_period_rank": "4",
                             *         "rank_pop": "-1",
                             *         "total": "69228"
                             *       },
                             *       {
                             *         "repo_id": "138754790",
                             *         "repo_name": "duckdb/duckdb",
                             *         "current_period_growth": "335",
                             *         "current_period_rank": "4",
                             *         "growth_pop": "-15.83",
                             *         "past_period_growth": "398",
                             *         "past_period_rank": "3",
                             *         "rank_pop": "1",
                             *         "total": "11408"
                             *       },
                             *       {
                             *         "repo_id": "99919302",
                             *         "repo_name": "apache/incubator-doris",
                             *         "current_period_growth": "329",
                             *         "current_period_rank": "5",
                             *         "growth_pop": "28.02",
                             *         "past_period_growth": "257",
                             *         "past_period_rank": "6",
                             *         "rank_pop": "-1",
                             *         "total": "9310"
                             *       },
                             *       {
                             *         "repo_id": "927442",
                             *         "repo_name": "postgres/postgres",
                             *         "current_period_growth": "210",
                             *         "current_period_rank": "6",
                             *         "growth_pop": "4.48",
                             *         "past_period_growth": "201",
                             *         "past_period_rank": "10",
                             *         "rank_pop": "-4",
                             *         "total": "13731"
                             *       },
                             *       {
                             *         "repo_id": "41986369",
                             *         "repo_name": "pingcap/tidb",
                             *         "current_period_growth": "202",
                             *         "current_period_rank": "7",
                             *         "growth_pop": "-3.81",
                             *         "past_period_growth": "210",
                             *         "past_period_rank": "8",
                             *         "rank_pop": "-1",
                             *         "total": "36325"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description The repository ID */
                                repo_id?: string;
                                /** @description The repository name */
                                repo_name?: string;
                                /** @description Stars growth in the current period (past 28 days / current month) */
                                current_period_growth?: string;
                                /** @description Stars growth in the past period (The 28 days before the past 28 days / past month) */
                                past_period_growth?: string;
                                /** @description The period-over-period growth of stars */
                                growth_pop?: string;
                                /** @description The period-over-period rank changes of stars */
                                rank_pop?: string;
                                /** @description The current total stars of repository */
                                total?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 7,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-repos-of-collection": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of collection */
                collection_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "repo_id",
                             *         "data_type": "BIGINT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "repo_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "repo_id": "507775",
                             *         "repo_name": "elastic/elasticsearch"
                             *       },
                             *       {
                             *         "repo_id": "41986369",
                             *         "repo_name": "pingcap/tidb"
                             *       },
                             *       {
                             *         "repo_id": "60246359",
                             *         "repo_name": "clickhouse/clickhouse"
                             *       },
                             *       {
                             *         "repo_id": "108110",
                             *         "repo_name": "mongodb/mongo"
                             *       },
                             *       {
                             *         "repo_id": "48833910",
                             *         "repo_name": "tikv/tikv"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description Repository ID */
                                repo_id?: string;
                                /** @description Repository name */
                                repo_name?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 5,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-issue-creators": {
        parameters: {
            query?: {
                /** @description Specify the field by which to sort the issue creators list (values with a `-desc` suffix indicate descending sorting) */
                sort?: "issues" | "issues-desc" | "first_issue_opened_at" | "first_issue_opened_at-desc" | "login";
                /** @description Whether to exclude robot accounts (includes GitHub App and normal users whose username matches the pattern, for example: `ti-chi-bot`). */
                exclude_bots?: boolean;
                /** @description Page number of the results to fetch. */
                page?: number;
                /** @description The number of results per page (max 100). */
                page_size?: number;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "id",
                             *         "data_type": "INT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "login",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "issues",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "first_issue_opened_at",
                             *         "data_type": "DATETIME",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "id": "73684",
                             *         "login": "yahonda",
                             *         "name": "Yasuo Honda",
                             *         "issues": "12",
                             *         "first_issue_opened_at": "2022-01-04 02:47:05"
                             *       },
                             *       {
                             *         "id": "1000627",
                             *         "login": "lcwangchao",
                             *         "name": "王超",
                             *         "issues": "211",
                             *         "first_issue_opened_at": "2021-06-03 01:06:44"
                             *       },
                             *       {
                             *         "id": "7499936",
                             *         "login": "qw4990",
                             *         "name": "Yuanjia Zhang",
                             *         "issues": "276",
                             *         "first_issue_opened_at": "2018-12-24 02:55:49"
                             *       },
                             *       {
                             *         "id": "15825830",
                             *         "login": "AilinKid",
                             *         "name": "Arenatlx",
                             *         "issues": "128",
                             *         "first_issue_opened_at": "2019-07-26 14:06:29"
                             *       },
                             *       {
                             *         "id": "21033020",
                             *         "login": "glkappe",
                             *         "name": "",
                             *         "issues": "29",
                             *         "first_issue_opened_at": "2020-07-30 08:12:09"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description The ID of the issue creator */
                                id?: string;
                                /** @description The login (username) of the issue creator */
                                login?: string;
                                /** @description The name of the issue creator */
                                name?: string;
                                /** @description The number of issues created by the issue creator */
                                issues?: string;
                                /** @description The date of the first issue created by the issue creator */
                                first_issue_opened_at?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 5,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-pull-request-creators": {
        parameters: {
            query?: {
                /** @description Specify the field by which to sort the pull request creators list (values with a `-desc` suffix indicate descending sorting) */
                sort?: "login" | "prs" | "prs-desc" | "first_pr_opened_at" | "first_pr_opened_at-desc" | "first_pr_merged_at" | "first_pr_merged_at-desc";
                /** @description Whether to exclude robot accounts (includes GitHub App and normal users whose username matches the pattern, for example: `ti-chi-bot`). */
                exclude_bots?: boolean;
                /** @description Page number of the results to fetch. */
                page?: number;
                /** @description The number of results per page (max 100). */
                page_size?: number;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "id",
                             *         "data_type": "INT",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "login",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": false
                             *       },
                             *       {
                             *         "col": "prs",
                             *         "data_type": "INT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "first_pr_opened_at",
                             *         "data_type": "DATETIME",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "first_pr_merged_at",
                             *         "data_type": "DATETIME",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "id": "1420062",
                             *         "login": "tiancaiamao",
                             *         "name": "",
                             *         "prs": "1300",
                             *         "first_pr_opened_at": "2016-06-20 14:08:39",
                             *         "first_pr_merged_at": "2016-06-21 07:45:27"
                             *       },
                             *       {
                             *         "id": "3427324",
                             *         "login": "hawkingrei",
                             *         "name": "Weizhen Wang",
                             *         "prs": "927",
                             *         "first_pr_opened_at": "2017-05-17 15:00:50",
                             *         "first_pr_merged_at": "2017-05-22 04:47:11"
                             *       },
                             *       {
                             *         "id": "26020263",
                             *         "login": "crazycs520",
                             *         "name": "crazycs",
                             *         "prs": "788",
                             *         "first_pr_opened_at": "2018-06-12 05:02:07",
                             *         "first_pr_merged_at": "2018-06-29 03:01:35"
                             *       },
                             *       {
                             *         "id": "891222",
                             *         "login": "coocood",
                             *         "name": "Evan Zhou",
                             *         "prs": "779",
                             *         "first_pr_opened_at": "2015-09-06 05:58:15",
                             *         "first_pr_merged_at": "2015-09-06 07:10:13"
                             *       },
                             *       {
                             *         "id": "4242506",
                             *         "login": "zimulala",
                             *         "name": "Lynn",
                             *         "prs": "774",
                             *         "first_pr_opened_at": "2015-09-06 10:51:19",
                             *         "first_pr_merged_at": "2015-09-06 12:32:33"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description The ID of the pull request creator */
                                id?: string;
                                /** @description The login (username) of the pull request creator */
                                login?: string;
                                /** @description The name of the pull request creator */
                                name?: string;
                                /** @description The number of pull requests created by the pull request creator */
                                prs?: string;
                                /** @description The date of the first pull request created by the pull request creator */
                                first_pr_opened_at?: string;
                                /** @description The date of the first merged pull request be merged into the repository */
                                first_pr_merged_at?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 5,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-countries-of-issue-creators": {
        parameters: {
            query?: {
                /** @description Whether to exclude issue creators with unknown country/region information */
                exclude_unknown?: boolean;
                /** @description The start date of the range. */
                from?: string;
                /** @description The end date of the range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "country_code",
                             *         "data_type": "CHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "percentage",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "issue_creators",
                             *         "data_type": "BIGINT",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "country_code": "CN",
                             *         "issue_creators": "7131",
                             *         "percentage": "0.8749"
                             *       },
                             *       {
                             *         "country_code": "US",
                             *         "issue_creators": "316",
                             *         "percentage": "0.0388"
                             *       },
                             *       {
                             *         "country_code": "CA",
                             *         "issue_creators": "243",
                             *         "percentage": "0.0298"
                             *       },
                             *       {
                             *         "country_code": "NL",
                             *         "issue_creators": "223",
                             *         "percentage": "0.0274"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description Country/region code */
                                country_code?: string;
                                /** @description Number of issue creators from the country/region */
                                issue_creators?: string;
                                /** @description Percentage of issue creators from the country/region */
                                percentage?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 4,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "issue-creators-history": {
        parameters: {
            query?: {
                /** @description The time interval of the data points. */
                per?: "day" | "week" | "month";
                /** @description The start date of the time range. */
                from?: string;
                /** @description The end date of the time range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "date",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "issue_creators",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "date": "2023-04-01",
                             *         "issue_creators": "1546"
                             *       },
                             *       {
                             *         "date": "2023-05-01",
                             *         "issue_creators": "1560"
                             *       },
                             *       {
                             *         "date": "2023-06-01",
                             *         "issue_creators": "1568"
                             *       },
                             *       {
                             *         "date": "2023-07-01",
                             *         "issue_creators": "1579"
                             *       },
                             *       {
                             *         "date": "2023-08-01",
                             *         "issue_creators": "1580"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description The date of the data point */
                                date?: string;
                                /** @description The number of issue creators on the date point */
                                issue_creators?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 5,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-organizations-of-issue-creators": {
        parameters: {
            query?: {
                /** @description Whether to exclude issue creators with unknown organization information */
                exclude_unknown?: boolean;
                /** @description The start date of the range. */
                from?: string;
                /** @description The end date of the range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "org_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "issue_creators",
                             *         "data_type": "BIGINT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "percentage",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "issue_creators": "117",
                             *         "org_name": "pingcap",
                             *         "percentage": "0.2833"
                             *       },
                             *       {
                             *         "issue_creators": "9",
                             *         "org_name": "tencent",
                             *         "percentage": "0.0218"
                             *       },
                             *       {
                             *         "issue_creators": "7",
                             *         "org_name": "alibaba",
                             *         "percentage": "0.0169"
                             *       },
                             *       {
                             *         "issue_creators": "6",
                             *         "org_name": "bytedance",
                             *         "percentage": "0.0145"
                             *       }
                             *     ] */
                            rows: ({
                                /** @description Number of issue creators from the organization */
                                issue_creators?: string;
                                /** @description Name of the organization */
                                org_name?: string;
                                /** @description Percentage of issue creators from the organization */
                                percentage?: string;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 4,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-countries-of-stargazers": {
        parameters: {
            query?: {
                /** @description Whether to exclude issue creators with unknown country/region information */
                exclude_unknown?: boolean;
                /** @description The start date of the range. */
                from?: string;
                /** @description The end date of the range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "country_code",
                             *         "data_type": "CHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "stargazers",
                             *         "data_type": "BIGINT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "percentage",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "country_code": "CN",
                             *         "percentage": "0.5935",
                             *         "stargazers": "9189"
                             *       },
                             *       {
                             *         "country_code": "US",
                             *         "percentage": "0.0996",
                             *         "stargazers": "1542"
                             *       },
                             *       {
                             *         "country_code": "JP",
                             *         "percentage": "0.0305",
                             *         "stargazers": "473"
                             *       },
                             *       {
                             *         "country_code": "DE",
                             *         "percentage": "0.0267",
                             *         "stargazers": "413"
                             *       }
                             *     ] */
                            rows: {
                                /** @description Country/region code */
                                country_code?: string;
                                /** @description Number of stargazers from the country/region */
                                stargazers?: string;
                                /** @description Percentage of stargazers from the country/region */
                                percentage?: string;
                            }[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 4,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "stargazers-history": {
        parameters: {
            query?: {
                /** @description The time interval of the data points. */
                per?: "day" | "week" | "month";
                /** @description The start date of the time range. */
                from?: string;
                /** @description The end date of the time range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "date",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "pull_request_creators",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "date": "2023-04-01",
                             *         "stargazers": "35389"
                             *       },
                             *       {
                             *         "date": "2023-05-01",
                             *         "stargazers": "35593"
                             *       },
                             *       {
                             *         "date": "2023-06-01",
                             *         "stargazers": "35805"
                             *       },
                             *       {
                             *         "date": "2023-07-01",
                             *         "stargazers": "36019"
                             *       },
                             *       {
                             *         "date": "2023-08-01",
                             *         "stargazers": "36026"
                             *       }
                             *     ] */
                            rows: {
                                /** @description The date of the data point */
                                date?: string;
                                /** @description The cumulative number of stargazers */
                                stargazers?: string;
                            }[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 5,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-organizations-of-stargazers": {
        parameters: {
            query?: {
                /** @description Whether to exclude stargazers with unknown organization information */
                exclude_unknown?: boolean;
                /** @description The start date of the range. */
                from?: string;
                /** @description The end date of the range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "org_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "stargazers",
                             *         "data_type": "BIGINT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "percentage",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "org_name": "tencent",
                             *         "percentage": "0.0217",
                             *         "stargazers": "199"
                             *       },
                             *       {
                             *         "org_name": "bytedance",
                             *         "percentage": "0.0192",
                             *         "stargazers": "176"
                             *       },
                             *       {
                             *         "org_name": "alibaba",
                             *         "percentage": "0.0162",
                             *         "stargazers": "148"
                             *       },
                             *       {
                             *         "org_name": "pingcap",
                             *         "percentage": "0.0119",
                             *         "stargazers": "109"
                             *       }
                             *     ] */
                            rows: {
                                /** @description Name of the organization */
                                org_name?: string;
                                /** @description Percentage of stargazers from the organization */
                                percentage?: string;
                                /** @description Number of stargazers from the organization */
                                stargazers?: string;
                            }[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 4,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-countries-of-pr-creators": {
        parameters: {
            query?: {
                /** @description Whether to exclude issue creators with unknown country/region information */
                exclude_unknown?: boolean;
                /** @description The start date of the range. */
                from?: string;
                /** @description The end date of the range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "country_code",
                             *         "data_type": "CHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "pull_request_creators",
                             *         "data_type": "BIGINT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "percentage",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "country_code": "CN",
                             *         "percentage": "0.8802",
                             *         "pull_request_creators": "13619"
                             *       },
                             *       {
                             *         "country_code": "NL",
                             *         "percentage": "0.0508",
                             *         "pull_request_creators": "786"
                             *       },
                             *       {
                             *         "country_code": "US",
                             *         "percentage": "0.0400",
                             *         "pull_request_creators": "619"
                             *       }
                             *     ] */
                            rows: {
                                /** @description Country/region code */
                                country_code?: string;
                                /** @description Percentage of pull request creators from the country/region */
                                percentage?: string;
                                /** @description Number of pull request creators from the country/region */
                                pull_request_creators?: string;
                            }[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 3,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "pull-request-creators-history": {
        parameters: {
            query?: {
                /** @description The time interval of the data points. */
                per?: "day" | "week" | "month";
                /** @description The start date of the time range. */
                from?: string;
                /** @description The end date of the time range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "date",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "pull_request_creators",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "date": "2023-03-01",
                             *         "pull_request_creators": "912"
                             *       },
                             *       {
                             *         "date": "2023-04-01",
                             *         "pull_request_creators": "915"
                             *       },
                             *       {
                             *         "date": "2023-05-01",
                             *         "pull_request_creators": "924"
                             *       },
                             *       {
                             *         "date": "2023-06-01",
                             *         "pull_request_creators": "932"
                             *       },
                             *       {
                             *         "date": "2023-08-01",
                             *         "pull_request_creators": "933"
                             *       }
                             *     ] */
                            rows: {
                                /** @description The date of the data point */
                                date?: string;
                                /** @description The cumulative number of pull request creators */
                                pull_request_creators?: string;
                            }[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 5,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    "list-organizations-of-pr-creators": {
        parameters: {
            query?: {
                /** @description Whether to exclude PR creators with unknown organization information */
                exclude_unknown?: boolean;
                /** @description The start date of the range. */
                from?: string;
                /** @description The end date of the range. */
                to?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The owner of the repo.
                 * @example pingcap
                 */
                owner: string;
                /**
                 * @description The name of the repo.
                 * @example tidb
                 */
                repo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of the endpoint.
                         * @example sql_endpoint
                         * @enum {string}
                         */
                        type: "sql_endpoint";
                        data: {
                            /** @example [
                             *       {
                             *         "col": "org_name",
                             *         "data_type": "VARCHAR",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "pull_request_creators",
                             *         "data_type": "BIGINT",
                             *         "nullable": true
                             *       },
                             *       {
                             *         "col": "percentage",
                             *         "data_type": "DECIMAL",
                             *         "nullable": true
                             *       }
                             *     ] */
                            columns: ({
                                /** @description The name of the column in the query result. */
                                col: string;
                                /**
                                 * @description The data type of the column.
                                 * @enum {string}
                                 */
                                data_type: "CHAR" | "BIGINT" | "DECIMAL" | "INT" | "UNSIGNED BIGINT" | "TINYINT" | "TIMESTAMP" | "TEXT" | "VARCHAR" | "DATETIME" | "DOUBLE" | "FLOAT" | "DATE" | "TIME" | "YEAR" | "MEDIUMINT" | "SMALLINT" | "BIT" | "BINARY" | "VARBINARY" | "JSON" | "ENUM" | "SET" | "TINYTEXT" | "MEDIUMTEXT" | "LONGTEXT" | "TINYBLOB" | "MEDIUMBLOB" | "BLOB" | "LONGBLOB";
                                /** @description Whether the column is nullable. */
                                nullable: boolean;
                            } & {
                                [key: string]: unknown;
                            })[];
                            /** @example [
                             *       {
                             *         "org_name": "pingcap",
                             *         "percentage": "0.3064",
                             *         "pull_request_creators": "106"
                             *       },
                             *       {
                             *         "org_name": "bytedance",
                             *         "percentage": "0.0318",
                             *         "pull_request_creators": "11"
                             *       },
                             *       {
                             *         "org_name": "alibaba",
                             *         "percentage": "0.0260",
                             *         "pull_request_creators": "9"
                             *       },
                             *       {
                             *         "org_name": "tencent",
                             *         "percentage": "0.0173",
                             *         "pull_request_creators": "6"
                             *       }
                             *     ] */
                            rows: {
                                /** @description Name of the organization */
                                org_name?: string;
                                /** @description Percentage of pull request creators from the organization */
                                percentage?: string;
                                /** @description Number of pull request creators from the organization */
                                pull_request_creators?: string;
                            }[];
                            /** @example {
                             *       "code": 200,
                             *       "message": "Query OK!",
                             *       "start_ms": 1690957407469,
                             *       "end_ms": 1690957407499,
                             *       "latency": "30ms",
                             *       "row_count": 4,
                             *       "row_affect": 0,
                             *       "limit": 50,
                             *       "databases": [
                             *         "gharchive_dev"
                             *       ]
                             *     } */
                            result: {
                                /** @description The code of the response. */
                                code?: number;
                                /** @description The message of the response. */
                                message?: string;
                                /** @description The start time of the query in milliseconds. */
                                start_ms?: number;
                                /** @description The end time of the query in milliseconds. */
                                end_ms?: number;
                                /** @description The latency of the query. */
                                latency?: string;
                                /** @description The number of rows in the query result. */
                                row_count?: number;
                                /** @description The number of rows affected by the query. */
                                row_affect?: number;
                                /** @description The maximum number of rows in the query result. */
                                limit?: number;
                                /** @description The databases used in the query. */
                                databases?: string[];
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
}
